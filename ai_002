import numpy as np
import pandas as pd
from sklearn import datasets
from sklearn import metrics
from sklearn.cluster import KMeans
from sklearn.mixture import GaussianMixture
import matplotlib.pyplot as plt

iris = datasets.load_iris()
x = iris.data
y = iris.target

kmeans = KMeans(n_clusters=3)
y_kmeans = kmeans.fit_predict(x)

gmm = GaussianMixture(n_components=3)
y_em = gmm.fit_predict(x)

print("KMeans labels:",y_kmeans)
print("EM labels:",y_em)

print("KMeans Homogeneity Score:",metrics.homogeneity_score(y,y_kmeans))
print("EM Homogeneity Score:",metrics.homogeneity_score(y,y_em))

print("KMeans Completeness Score:",metrics.completeness_score(y,y_kmeans))
print("EM Completeness Score:",metrics.completeness_score(y,y_em))

print("KMeans Adjusted Rand Index:",metrics.adjusted_rand_score(y,y_kmeans))
print("EM Adjusted Rand Index:",metrics.adjusted_rand_score(y,y_em))

# Plot KMeans clusters
plt.subplot(1, 2, 1)
plt.scatter(x[:, 0], x[:, 1], c=y_kmeans, cmap='viridis', s=50, alpha=0.8)
plt.title('KMeans Clustering')
plt.xlabel('Feature 1')
plt.ylabel('Feature 2')

# Plot Gaussian Mixture Model clusters
plt.subplot(1, 2, 2)
plt.scatter(x[:, 0], x[:, 1], c=y_em, cmap='viridis', s=50, alpha=0.8)
plt.title('Gaussian Mixture Model Clustering')
plt.xlabel('Feature 1')
plt.ylabel('Feature 2')

plt.show()




#from file

import numpy as np
import pandas as pd
from sklearn.mixture import GaussianMixture
import matplotlib.pyplot as plt
from sklearn import metrics
from sklearn.cluster import KMeans
names=['Id','SepalLengthCm','SepalWidthCm','PetalLengthCm','PetalWidthCm','Species']
dataset=pd.read_csv(r'C:\Users\Administrator\Downloads\Iris.csv',names=names,skiprows=1)
X=dataset.iloc[:,1:-1]
labels={'Iris-setosa':0,'Iris-versicolor':1,'Iris-virginica':2}
Y=[labels[c] for c in dataset['Species']]
plt.figure(figsize=(14,7))
colormap=np.array(['red','lime','black'])
plt.subplot(1,3,1)
plt.title("Real")
plt.scatter(X['PetalLengthCm'],X['PetalWidthCm'],c=colormap[Y])

cluster=KMeans(n_clusters=3).fit(X)
plt.subplot(1,3,2)
plt.title("KMeans")
plt.scatter(X['PetalLengthCm'],X['PetalWidthCm'],c=colormap[cluster.labels_])
print(metrics.accuracy_score(Y,cluster.labels_))
g=GaussianMixture(n_components=3,random_state=0).fit(X)
gmm=g.predict(X)
plt.subplot(1,3,3)
plt.title("EM")
plt.scatter(X['PetalLengthCm'],X['PetalWidthCm'],c=colormap[gmm])
print(metrics.accuracy_score(Y,gmm))
